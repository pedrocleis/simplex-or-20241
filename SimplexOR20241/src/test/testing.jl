using LinearAlgebra, Combinatorics, Printf

c = [0;	    -0.4;	0;	    0;	    0;		0;		0;	    0;		0;		0;      0;      0;      -0.32;	0;	    0;		0;	    -0.6;	0;	    0;		0;	    0;		0;		0;		0;		0;		0;		0;	    0;	    -0.48;	0;	    0;	    10;]
A = [-1     1       1	    0		0		0		0	    0		0		0	    0		0		0	    0	    0		0		0	    0	    0		0	    0		0		0		0		0		0		0	    0	    0		0	    0		0;
	-1.06   0		0		1	    0		0		0	    0		0		0	    0		0		0	    0	    0		0		0	    0	    0		0	    0		0		0		0		0		0		0	    0	    0		0	    0		0;							
	0	    0		0		0	    -1		-1		-1	    -1		0		0	    0		0		1	    1	    0		0		0	    0	    0		0	    0		0		0		0		0		0		0	    0	    0		0	    0		0;
	0		0	    0		0	    -1.06	-1.06   -0.96   -0.86	0		0	    0		0		0	    0	    1		0		0	    0	    0		0	    0		0		0		0		0		0		0	    0	    0		0	    0		0;
	0		0	    0		0	    0		0		0	    0		0		0	    0		0		0	    0	    0		-1		1	    1	    1		0	    0		0		0		0		0		0		0	    0	    0		0	    0		0;
	0		0	    0		0	    0		0		0	    0		0		0	    0		0		0	    0	    0		-0.43	0	    0	    0		1	    0		0		0		0		0		0		0	    0	    0		0	    0		0;
	0		0	    0		0	    0		0		0	    0		0		0	    0		0		0	    0	    0		0		0	    0	    0		0	    -0.43	-0.43	-0.39	-0.37	0		0		0	    0	    0		0	    1		0;
	0		0	    0		0	    0		0		0	    0		0		0	    0		0		0	    0	    0		0		0	    0	    0		0	    1		1		1		1		0		0		0	    0	    -1		1	    0		1;
	1		0	    0		0	    0		0		0	    0		0		0	    0		0		0	    0	    0		0		0	    0	    0		0	    0		0		0		0		0		0		0	    0	    0		0	    0		0;				
	0		0	    0		0	    1		0		0	    0		-1		0	    0		0		0	    0	    0		0		0	    0	    0		0	    0		0		0		0		0		0		0	    0	    0		0	    0		0;
	0		0	    0		0	    0		1		0	    0		0		-1	    0		0		0	    0	    0		0		0	    0	    0		0	    0		0		0		0		0		0		0	    0	    0		0	    0		0;
	0		0	    0		0	    0		0		1	    0		0		0	    -1		0		0	    0	    0		0		0	    0	    0		0	    0		0		0		0		0		0		0	    0	    0		0	    0		0;
	0		0	    0		0	    0		0		0	    1		0		0	    0		-1		0	    0	    0		0		0	    0	    0		0	    0		0		0		0		0		0		0	    0	    0		0	    0      	0;
	0		-1	    0		0	    0		0		0	    0		0		0	    0		0		1.4	    0	    0		0		0	    0	    0		0	    0		0		0		0		0		0		0	    0	    0		0	    0		0;
	0		0	    0		0	    0		0		0	    0		0		0	    0		0		0	    0	    0		1		0	    0	    0		0	    0		0		0		0		0		0		0	    0	    0		0	    0		0;
	0		0	    0		0	    0		0		0	    0		0		0	    0		0		0	    0	    0		0		0	    0	    0		0	    1		0		0		0		-1		0		0		0	    0		0	    0		0;
	0		0	    0		0	    0		0		0	    0		0		0	    0		0		0	    0	    0		0		0	    0	    0		0	    0		1		0		0		0	    -1		0		0	    0		0	    0		0;
	0		0	    0		0	    0		0		0	    0		0		0	    0		0		0	    0	    0		0		0	    0	    0		0	    0		0		1		0		0		0		-1		0	    0	    0		0	    0;
	0       0		0	    0		0	    0		0		0	    0		0		0	    0		0		0	    0	    0		0		0	    0	    0		0	    0		0		1		0		0		0		-1		0	    0	    0		0; 
	0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       -1      0       0       0       0       0       0       0       0       0       0       0       1.4     0       0       0;
	0       0       0       0       0       0       0       0       2.364   2.386   2.408   2.429   0       0       0       0       0       0       -1      0       0       0       0       0       2.191   2.219   2.249   2.279   0       0       0       0;
	0       0       -1      0       0       0       0       0       0       0       0       0       0       0       0       0.109   0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0;
	0       0       0       0       0       0       0       0       0       0       0       0       0       -1      0       0       0       0       0       0       0.109   0.108   0.108   0.107   0       0       0       0       0       0       0       0;
	0.301   0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       -1      0       0       0       0       0       0       0       0       0       0       0       0       0       0;
	0       0       0       0       0.301   0.313   0.313   0.326   0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       -1      0       0;
	0       0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       1       0       0       0       0       0       0       0       0       0       0       0       0;
	0       0       0       0       0       0       0       0       0       0       0       0       0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       1       0;]
A_type = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
b = [0, 0, 0, 0, 0, 0, 0, 44, 80, 80, 0, 0, 0, 0, 500, 500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 310, 300]


dummies = Int64[]
rows, columns = size(A)
A_aux = []
number_aux = 0

for i in eachindex(A_types)
	if A_types[i] == -1
		number_aux += 2
	elseif A_types[i] == 1
		number_aux += 1
	else
		number_aux += 1
	end
end

A_aux = zeros(BigFloat, rows, number_aux)

aux_matrix = 0

for i in eachindex(A_types)
	if A_types[i] == 1
		A_aux[i, i + aux_matrix] = 1
	elseif A_types[i] == -1
		A_aux[i, i + aux_matrix] = -1
		A_aux[i, i + 1 + aux_matrix] = 1
		push!(dummies, i + 1 + aux_matrix)
		aux_matrix += 1
	else
		A_aux[i, i + aux_matrix] = 1
		push!(dummies, i + aux_matrix)
	end
end

A = hcat(A, A_aux)

println(A)